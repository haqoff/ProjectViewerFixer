<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="msBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ+KdRigj3zCnIx4/J+O
        e92ciXY2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfj3y9tqiT+9XHtf/DtaL/no579ZuNdjgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnox5+NPHs//Wybb/1sm2/8S2o/+ejnvznI14MQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCPfNrEtqP/1sm2/9bJ
        tv/Wybb/w7Wh/p6Oe/GejHkqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACajXc6no569Ma5pf/Wybb/1sm2/9bJtv/AsqD+no167pmK
        dSMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJ2KeEaejnvzyLmn/tbJtv/Wybb/1sm2/7usmfuejnzjl4t0FgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnIp5O56N
        evLFt6P+1sm2/9bJtv/Wybb/uaqX+5+Pe9+ZjHMUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACciXY2n4578cG0oP3Wybb/1sm2/9bJ
        tv+1pZL6n45715mIdw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ+Ody2ejXruvrGd+9bJtv/Wybb/1sm2/7Slkfifj3vNmYCACgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnI54JJ6Oe+m9rpv71sm2/9bJtv/VyLb/sKCO+J+Pe8mqjnEJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC1ek6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACejXsdno5647qr
        mfnWybb/1sm2/9XItf+tnor3n458v5mZZgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4fE+EtXpO/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2JdhqejnrftaeT+NbJtf/Wybb/1ci0/6yc
        ifWfj3uyqqpVAwAAAAAAAAAAAAAAALt3VQ+0e05VuoNXqruCV9m4flPxtXpO/7h+U/G7glfZuoJYqbZ5
        T1S7d1UPAAAAAAAAAAC3e0+LvYJV8rV6Tv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAoYZ5E5+Oe9ezpZL41sm1/9bJtv/Ux7T/qZqH9J6OeqX//wABuIBVEriA
        VZa3flL3yZhw8ePBn//y2br/+eTH///t0f/55Mf/8tm6/+LAnv/Il2/xt35S97h/U5O3e0+Lu4FU9Oqx
        hP+1ek7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACkkoAOn498zLCijvbVybX/1sm2/9PHs/+ol4T1qYZowLh+U/TRpn/3+OLE///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R//jixf/EkWj8u4FV/+qwhf/wt4v/tXpO/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKqOcQmfjXvBrp6K9dXH
        tf/WyLX/xKGC/7mDWf/v1LX//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f/aso7/voVa/+qwhf/wt4v/8LeL/7V6Tv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn4CACKCOe7urmoj2xaGD/8GOZf/34cP//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f/Yr4v/wYle/+uyh//wt4v/8LeL//C3
        i/+1ek7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAgIAEqYZpybqEW//44sX//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f/YsIz/tXpO/7V6Tv+1ek7/tXpO/7V6Tv+1ek7/tXpO/+PAnokAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtHhLEbd+
        U/Lx17n//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f/55Mj+4LmiIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALh+VIzQpH32/+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R/+vNrMoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALaASQ64fVL3+OLE///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R//fhxP+4fVL3v4BVDAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2eU9Ux5Zt8f/t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH/xpVs8LN7T1EAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuYBWr+LAnv7/7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R/+G/nP65glWrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALuCV9zw1rf//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f/w1bb/uoJX2QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4flPw+OLF///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH/9+HD/7l/VO8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtntP/P3qzv//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R//3pzf+2fFD7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALh/VPH44sT//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f/34cT/uYBU7wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6glfd8da4///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH/8Na2/7qCV9oAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuYBWr+LAnv7/7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R/+G/nP65glWrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALV7TVnJmHDx/+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f/Ilm/xtXpNVgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbv5Ic++jL///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f/34cT/uH1S97+AVQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOjJqtH/7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH/06eC97h/U5MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADbtpkjtXpO/7V6Tv+1ek7/tXpO/7V6Tv+1ek7/tXpO/9qzj///7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH/8da4/7h/VPG7d1UPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALV6
        Tv/wt4v/8LeL//C3i//rsob/wIZb/9myjv//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH/+ePG/7yEW/W2fFBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1ek7/8LeL//C3i//rsob/wIZb/9my
        jf//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH/+eTH/8KP
        ZvO3gFSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtXpO//C3i//rsob/voRZ/9etiP//7dH//+3R///t0f//7dH//+3R///t
        0f//7dH//+3R///t0f//7dH//+3R///t0f//7dH/8tm6/7yFXPW5gFaD/wAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALV6
        Tv/rsob/vIJW9bh8UK+4flPy1KmD9/nkxv//7dH//+3R///t0f//7dH//+3R///t0f//7dH//+3R///t
        0f/448X/06iC97h+U/K1e1BTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1ek7/vYJV9rZ9UX4AAAAAuIBVEriA
        VZa3flL3yZhw8ePBn//x17n/9+DD//rlyP/34MP/8de5/+LAnv/Il2/xt35S97h/U5O0eEsRAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtXpO/7h8T4QAAAAAAAAAAAAAAAAAAAAAu3dVD7R7TlW6g1equ4NY1rqA
        Vuu3fVP2uoBW67uDWNa6gliptnlPVLt3VQ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALR6
        TXcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////8AAACD/////wAAAIH/
        ////AAAAgP////8AAACAf////wAAAIA/////AAAAwB////8AAADgD////wAAAPAH////AAAA+AP///8A
        AAD8Af//7wAAAP4A///PAAAA/wBwAY8AAAD/gAAADwAAAP/AAAAPAAAA/+AAAA8AAAD/8AAADwAAAP/4
        AAAHAAAA//gAAAMAAAD/+AAAAwAAAP/wAAABAAAA//AAAAEAAAD/8AAAAQAAAP/wAAABAAAA//AAAAEA
        AAD/8AAAAQAAAP/wAAABAAAA//AAAAEAAAD/8AAAAQAAAP/wAAABAAAA//AAAAEAAAD/+AAAAwAAAP/4
        AAADAAAA//wAAAcAAAD//AAADwAAAP/8AAAPAAAA//wAAD8AAAD//EAAfwAAAP/88AH/AAAA//3///8A
        AAA=
</value>
  </data>
</root>